apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      runtimeClassName: nvidia
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
      restartPolicy: Always
      containers:
      - name: jellyfin
        image: jellyfin/jellyfin
        ports:
        - containerPort: 8096
          protocol: TCP
          name: jellyfin-http
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
        volumeMounts:
        - name: jellyfin-config
          mountPath: /config
        - name: jellyfin-cache
          mountPath: /cache
        - name: jellyfin-data
          mountPath: /media
      tolerations:
      - key: node.kubernetes.io/not-ready
        effect: NoExecute
        tolerationSeconds: 0
      - key: node.kubernetes.io/unreachable
        effect: NoExecute
        tolerationSeconds: 0
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      volumes:
      - name: jellyfin-config
        persistentVolumeClaim:
          claimName: jellyfin-config
      - name: jellyfin-cache
        emptyDir:
          sizeLimit: 2Gi
      - name: jellyfin-data
        nfs:
          server: 10.1.10.100
          path: /mnt/Andromeda/plex-data
          readOnly: true